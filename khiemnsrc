# set -o vi

git config --global core.excludesfile $DOTFILES/git/gitignore

alias be="bundle exec"
alias pe="pipenv run python"
alias rspec="bundle exec rspec"
alias rubocop="bundle exec rubocop --auto-correct"
alias rails="bundle exec rails"
alias ws="cd ~/workspace/projects"
alias gitclean="git fetch; git branch --merged | egrep -v '(^\*|master|dev)' | xargs git branch -d"
alias gitclear="git branch | grep -v "master" | xargs git branch -D "
alias cls="tmux clear-history; clear"
alias reload="exec $SHELL"
alias vi="nvim"

set -o ignoreeof

export PATH="/usr/local/opt/openssl/bin:$PATH"
export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig"
export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="/usr/local/go/bin:$PATH"
export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/
export PATH="$PATH:$HOME/.cargo/bin"

export GOPATH="$HOME/.go"
export GOBIN="$GOPATH/bin"
export PATH="$PATH:$GOBIN"
mkdir -p $GOBIN

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if hash pyenv 2>/dev/null ; then
  eval "$(pyenv init -)"
fi

export PATH="$HOME/.rbenv/bin:$PATH"
if hash rbenv 2>/dev/null ; then
  eval "$(rbenv init -)"
fi

export PATH="$HOME/.ndenv/bin:$PATH"
if hash ndenv 2>/dev/null ; then
  eval "$(ndenv init -)"
fi
export PATH="${HOME}/.scalaenv/bin:${PATH}"
if hash scalaenv 2>/dev/null ; then
  eval "$(scalaenv init -)"
fi

ssh-add ~/.ssh/id_rsa 2> /dev/null

export LC_ALL=en_US.UTF-8

if [ ! -L "$HOME/.tmux.conf" ]
then
  ln -s $DOTFILES/tmux/default.conf ~/.tmux.conf
fi

if [ ! -L "$HOME/.inputrc" ]
then
  ln -s $DOTFILES/inputrc ~/.inputrc
fi

if [ ! -L "$HOME/.vimrc" ]
then
  ln -s $DOTFILES/vim/vimrc ~/.vimrc
fi

if [ ! -L "$HOME/.config/nvim/init.vim" ]
then
  mkdir -p ~/.config/nvim
  ln -s $DOTFILES/nvim/init.vim ~/.config/nvim/init.vim
fi

if [ ! -L "$HOME/.emacs" ]
then
  ln -s $DOTFILES/emacs/emacsrc ~/.emacs
fi

if [ ! -L "$HOME/.zshenv" ]
then
  ln -s $DOTFILES/zsh/zshenv ~/.zshenv
fi


autoload -Uz colors; colors
autoload -Uz add-zsh-hook
autoload -Uz terminfo

terminfo_down_sc=$terminfo[cud1]$terminfo[cuu1]$terminfo[sc]$terminfo[cud1]
left_down_prompt_preexec() {
    print -rn -- $terminfo[el]
}
add-zsh-hook preexec left_down_prompt_preexec

function zle-keymap-select zle-line-init zle-line-finish
{
    case $KEYMAP in
        main|viins)
            PROMPT_2="$fg[cyan]-- INSERT --$reset_color"
            ;;
        vicmd)
            PROMPT_2="$fg[white]-- NORMAL --$reset_color"
            ;;
        vivis|vivli)
            PROMPT_2="$fg[yellow]-- VISUAL --$reset_color"
            ;;
    esac

    PROMPT="%{$terminfo_down_sc$PROMPT_2$terminfo[rc]%}[%(?.%{${fg[green]}%}.%{${fg[red]}%})%n%{${reset_color}%}]%# "
    zle reset-prompt
}

zle -N zle-line-init
zle -N zle-line-finish
zle -N zle-keymap-select
zle -N edit-command-line
bindkey -v
